version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: cx_service
      POSTGRES_USER: cx_user
      POSTGRES_PASSWORD: cx_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cx_user -d cx_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    # ports:
    #   - "6379:6379"  # Removed to avoid conflicts
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # CX Service Web Application
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-development-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
      - TIME_ZONE=Asia/Jakarta
      - BASE_URL=http://localhost:8000
      
      # Database Configuration
      - DB_NAME=cx_service
      - DB_USER=cx_user
      - DB_PASSWORD=cx_password
      - DB_HOST=db
      - DB_PORT=5432
      
      # JuloDB Configuration (using same DB for demo)
      - POSTGRESQL_OPS_NAME=cx_service
      - POSTGRESQL_OPS_USER=cx_user
      - POSTGRESQL_OPS_PASSWORD=cx_password
      - POSTGRESQL_OPS_HOST=db
      - POSTGRESQL_OPS_PORT=5432
      
      # Platform DB Configuration (using same DB for demo)
      - POSTGRESQL_PLATFORM_OPS_NAME=cx_service
      - POSTGRESQL_PLATFORM_OPS_USER=cx_user
      - POSTGRESQL_PLATFORM_OPS_PASSWORD=cx_password
      - POSTGRESQL_PLATFORM_OPS_HOST=db
      - POSTGRESQL_PLATFORM_OPS_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - REDIS_PASSWORD=
      - REDIS_USER=
      
      # Redis Cacheops Configuration
      - REDIS_CACHEOPS_HOST=redis
      - REDIS_CACHEOPS_PORT=6379
      - REDIS_CACHEOPS_DB=2
      - REDIS_CACHEOPS_PASSWORD=
      
      # Message Broker
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      
      # CORS Configuration
      - CORS_ALLOWED_ORIGINS=http://localhost:8000,http://localhost:3000
      
      # Logging
      - LOG_PATH=logs
      - ENVIRONMENT=docker
      
      # Static Files
      - STATIC_URL=/static/
      - STATIC_ROOT=staticfiles
    volumes:
      - ./logs:/app/logs
      - static_volume:/app/staticfiles
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      sh -c "
        uv run python src/manage.py migrate &&
        uv run python src/manage.py runserver 0.0.0.0:8000
      "

  # Celery Worker
  celery:
    build: .
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-development-key-change-in-production
      
      # Database Configuration
      - DB_NAME=cx_service
      - DB_USER=cx_user
      - DB_PASSWORD=cx_password
      - DB_HOST=db
      - DB_PORT=5432
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - REDIS_PASSWORD=
      
      # Message Broker
      - BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      
      # Logging
      - LOG_PATH=logs
      - ENVIRONMENT=docker
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: uv run celery -A src.config.settings_celery worker -l info -Q default

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  static_volume: